#!/bin/sh

# Copyright 2021 William Hua <william@attente.ca>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

usage() {
  echo Usage: "$(basename "$0")" [FILE [LINE]]
  echo Print a URL to a GitHub repository or source file.
}

if [ "$1" = '-h' ] || [ "$1" = '--help' ] ; then
  usage
  exit 0
fi

if [ "$1" ] ; then
  # make sure realpath won't error out
  if [ "$(realpath -e "$1" 2>&1 | wc -l)" -gt 1 ] ; then
    usage
    exit 1
  fi

  # path argument might be a repository root
  if [ -d "$1/.git" ] ; then
    dir="$(realpath -e "$1")"
  else
    file="$(realpath -e "$1")"
    dir="$(dirname "$file")"
  fi
else
  dir="$PWD"
fi

# make sure we are inside a git repo
if ! git -C "$dir" status >/dev/null ; then
  exit 1
fi

# find the first ancestor that exists upstream
i=0
while true ; do
  if [ "$(git -C "$dir" branch -r --contains HEAD~$i)" ] ; then
    break
  fi
  i="$((i+1))"
done

if [ "$file" ] ; then
  url=$(git -C "$dir" remote get-url origin | \
    sed -e 's/^\(ssh:\/\/\)\?git@github.com[/:]/https:\/\/github.com\//' | \
    sed -e "s/\.git$/\/blob\/$(git -C "$dir" rev-parse HEAD~$i)/")

  # resolve path argument relative to the repository root
  url="${url}/$(realpath --relative-to="$(git -C "$dir" rev-parse --show-toplevel)" "$file")"

  if [ "$2" ] ; then
    # append line number argument
    url="${url}#L$2"
  fi
else
  url=$(git -C "$dir" remote get-url origin | \
    sed -e 's/^\(ssh:\/\/\)\?git@github.com[/:]/https:\/\/github.com\//' | \
    sed -e "s/\.git$/\/tree\/$(git -C "$dir" rev-parse HEAD~$i)/")
fi

echo "$url" | sed -e 's/%/%25/' | sed -e 's/ /%20/'
